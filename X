-- Grow A Garden | Kuni Pet Predictor + ESP + Loading + Minimize/Exit

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

-- Egg Data Table
local eggPets = {
    ["Common Egg"] = {"Dog", "Bunny", "Golden Lab"},
    ["Uncommon Egg"] = {"Cat", "Chicken", "Deer", "Black Bunny"},
    ["Rare Egg"] = {"Fox", "Raccoon", "Hedgehog"},
    ["Mythic Egg"] = {"Dragon", "Unicorn", "Alien Beast"},
    ["Spooky Egg"] = {"Pumpkin Pet", "Ghost Dog", "Spider"},
    ["Beach Egg"] = {"Crab", "Dolphin", "Turtle"},
    ["Frozen Egg"] = {"Penguin", "Polar Bear", "Ice Golem"},
    ["New Year Egg"] = {"Fire Dragon", "Festival Cat", "Boom Pet"},
    ["Rainbow Egg"] = {"Rainbow Pup", "Sparkle Pony", "Starry Pet"},
}

-- Loading GUI
local loadingGui = Instance.new("ScreenGui", PlayerGui)
loadingGui.Name = "KuniLoadingScreen"
loadingGui.IgnoreGuiInset = true
loadingGui.ResetOnSpawn = false

local bg = Instance.new("Frame", loadingGui)
bg.Size = UDim2.new(1, 0, 1, 0)
bg.BackgroundColor3 = Color3.fromRGB(25, 25, 25)

local title = Instance.new("TextLabel", bg)
title.Size = UDim2.new(1, 0, 0, 80)
title.Position = UDim2.new(0, 0, 0.35, 0)
title.BackgroundTransparency = 1
title.Text = "Kuni Hub"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextScaled = true
title.Font = Enum.Font.GothamSemibold

local loadingText = Instance.new("TextLabel", bg)
loadingText.Size = UDim2.new(1, 0, 0, 40)
loadingText.Position = UDim2.new(0, 0, 0.45, 0)
loadingText.BackgroundTransparency = 1
loadingText.Text = "Loading"
loadingText.TextColor3 = Color3.fromRGB(200, 200, 200)
loadingText.TextScaled = true
loadingText.Font = Enum.Font.Gotham

-- Animate Loading Dots
task.spawn(function()
	local dotCount = 0
	while loadingGui and loadingGui.Parent do
		dotCount = (dotCount + 1) % 4
		loadingText.Text = "Loading" .. string.rep(".", dotCount)
		task.wait(0.5)
	end
end)

-- After 10s, show GUI
task.delay(10, function()
	TweenService:Create(bg, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
	for _, obj in pairs(bg:GetChildren()) do
		if obj:IsA("TextLabel") then
			TweenService:Create(obj, TweenInfo.new(1), {TextTransparency = 1}):Play()
		end
	end
	wait(1)
	loadingGui:Destroy()

	-- Main GUI
	local ui = Instance.new("ScreenGui", PlayerGui)
	ui.Name = "KuniPetPredictorUI"
	ui.ResetOnSpawn = false

	local frame = Instance.new("Frame", ui)
	frame.Size = UDim2.new(0, 280, 0, 160)
	frame.Position = UDim2.new(0.5, -140, 0.5, -80)
	frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	frame.BorderSizePixel = 0
	frame.AnchorPoint = Vector2.new(0.5, 0.5)
	frame.Active = true
	frame.Draggable = true

	local topBar = Instance.new("Frame", frame)
	topBar.Size = UDim2.new(1, 0, 0, 30)
	topBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)

	local titleLabel = Instance.new("TextLabel", topBar)
	titleLabel.Size = UDim2.new(1, -60, 1, 0)
	titleLabel.Position = UDim2.new(0, 5, 0, 0)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = "Pet Predictor"
	titleLabel.Font = Enum.Font.GothamSemibold
	titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	titleLabel.TextScaled = true
	titleLabel.TextXAlignment = Enum.TextXAlignment.Left

	local exitButton = Instance.new("TextButton", topBar)
	exitButton.Size = UDim2.new(0, 30, 0, 30)
	exitButton.Position = UDim2.new(1, -30, 0, 0)
	exitButton.Text = "X"
	exitButton.Font = Enum.Font.GothamBold
	exitButton.TextColor3 = Color3.new(1, 0.4, 0.4)
	exitButton.BackgroundTransparency = 1

	local minimizeButton = Instance.new("TextButton", topBar)
	minimizeButton.Size = UDim2.new(0, 30, 0, 30)
	minimizeButton.Position = UDim2.new(1, -60, 0, 0)
	minimizeButton.Text = "-"
	minimizeButton.Font = Enum.Font.GothamBold
	minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 0)
	minimizeButton.BackgroundTransparency = 1

	local content = Instance.new("Frame", frame)
	content.Size = UDim2.new(1, 0, 1, -30)
	content.Position = UDim2.new(0, 0, 0, 30)
	content.BackgroundTransparency = 1

	local resultLabel = Instance.new("TextLabel", content)
	resultLabel.Size = UDim2.new(1, 0, 0, 50)
	resultLabel.Position = UDim2.new(0, 0, 0, 10)
	resultLabel.Text = "Click to predict a pet!"
	resultLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
	resultLabel.TextScaled = true
	resultLabel.BackgroundTransparency = 1
	resultLabel.Font = Enum.Font.Gotham

	local button = Instance.new("TextButton", content)
	button.Size = UDim2.new(0, 130, 0, 35)
	button.Position = UDim2.new(0.5, -65, 1, -45)
	button.Text = "Randomize Pet"
	button.TextColor3 = Color3.new(1, 1, 1)
	button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	button.Font = Enum.Font.GothamSemibold
	button.TextScaled = true

	-- Minimize Logic
	local minimized = false
	minimizeButton.MouseButton1Click:Connect(function()
		minimized = not minimized
		content.Visible = not minimized
	end)

	-- Exit Logic
	exitButton.MouseButton1Click:Connect(function()
		ui:Destroy()
	end)

	-- Predict Logic
	button.MouseButton1Click:Connect(function()
		local allPets = {}
		for _, pets in pairs(eggPets) do
			for _, pet in ipairs(pets) do
				table.insert(allPets, pet)
			end
		end
		local chosen = allPets[math.random(1, #allPets)]
		resultLabel.Text = "You got: " .. chosen
	end)

	-- ESP Logic
	RunService.RenderStepped:Connect(function()
		for _, v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and v.Name:lower():find("egg") and not v:FindFirstChild("ESP") then
				local tag = Instance.new("BillboardGui", v)
				tag.Name = "ESP"
				tag.Size = UDim2.new(0, 200, 0, 25)
				tag.StudsOffset = Vector3.new(0, 2, 0)
				tag.AlwaysOnTop = true

				local label = Instance.new("TextLabel", tag)
				label.Size = UDim2.new(1, 0, 1, 0)
				label.BackgroundTransparency = 1
				label.TextScaled = true
				label.TextColor3 = Color3.fromRGB(255, 255, 0)
				label.Font = Enum.Font.GothamBold

				local eggType = v.Name
				local pets = eggPets[eggType]
				if pets then
					label.Text = table.concat(pets, " | ")
				else
					label.Text = "Unknown Egg"
				end
			end
		end
	end)
end)
